[core]

#: verbose level (0,1 or 2)
verbose = 0
#: max beta parameter used in calculations. Should be 0 < betamax 
betamax = 0.8 
#: smoothnes parameter used in reflection calculation in 4x4 method Should be 0 < smooth
smooth = 0.1
#: specifies if computation results are being cached or not 
cache = yes
#: specifies whether double precision is used in calculations:
double_precision = yes

[transfer]

#: default effective data 0 - isotropic, 1 - uniaxial, 2 - biaxial
eff_data = 0
#: default input refractive index. If not set or empty, defaults to n_cover.
#nin = 
#: default output refractive index. If not set or empty, defaults to n_cover .
#nout = 
#: either 2x2 or 4x4
method = "2x2"
#: how many passes to perform (set this to > 1) if you want to compute reflections also.
npass = 1
#: diffraction quality (0,1,2... or -1 for full diffraction).
diffraction = 1
#: reflection mode, either 0, 1 or 2 or comment out to let the algorithm choose the best mode
#reflection = 2

[viewer]

#: default cmf function  or path to tabulated cmf data used in field_viewer.
cmf = CIE1931
#: specifies whether to show ticks or not, comment out or leave empty for auto.
#show_ticks = 
#: specifies whether to show scale bar, you must have matplotlib.scale_bar installed.
show_scalebar = no
#: specifies whether to show sliders in the viewer.
show_sliders = yes
#: specified whether to convert RGB to gray.
gray = no
#: specifies whether to apply gamma or not, or set the gamma as float.
gamma = yes
#gamma = 2. 
#: cover glass refractive index used in pom_viewer.
n_cover = 1.5
#: cover glass thickness. Set to zero or comment out to disable cover glass.
d_cover = 0.
#: specifies whether oil imersion microscope is being use or not.
immersion = no
#: numerical aperture of the objective. Should be lower than 1 for non-immersion objectives.
NA = 0.7
#: objective magnification factor
magnification = 10.

[numba]

#: are compiled numba functions cached or not.
cache = yes
#: should we compile with multithreading support ('target = parallel' option).
parallel = no
#: should numba use 'fastmath = True' option. 
fastmath = no
#: number of threads used for numba-compiled functions. Uncomment it and set to desired value.
#  number of threads (int) is defined automatically if not defined below.
#nthreads = 

[fft]

#: fft library used for fft, can be mkl_fft, numpy, scipy, comment out to use default library.
#fftlib = 
#: specifies whether we use python's threading for fft, or we leave it as implemented in the fft library.
#: setting this to yes disable threading in mkl_fft and scipy and uses Pool-based threading. 
#: this parameter does not affect pyfftw threading. Defaults to 'no'.
#thread_pool = no
#: number of threads (int) used if parallel mode is activated. Uncomment it and set to desired value.
#  number of threads is defined automatically if not defined below.
#nthreads = 
